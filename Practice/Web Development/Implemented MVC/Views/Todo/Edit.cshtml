@model Implemented_MVC.DTOs.UpdateTodoItemDto
@{
    ViewData["Title"] = "Edit Todo";
    var todoId = ViewBag.TodoId;
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card shadow">
            <div class="card-header bg-warning text-dark">
                <h3 class="card-title mb-0">
                    <i class="fas fa-edit me-2"></i>Edit Todo
                </h3>
            </div>
            <div class="card-body p-4">
                <form asp-action="Edit" asp-route-id="@todoId" method="post">
                    <div class="mb-3">
                        <label asp-for="Title" class="form-label">Title <span class="text-danger">*</span></label>
                        <input asp-for="Title" class="form-control" placeholder="Enter todo title" autofocus />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter todo description (optional)"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="DueDate" class="form-label">Due Date</label>
                        <input asp-for="DueDate" class="form-control" type="datetime-local" />
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>Optional: Set a due date for this todo
                        </div>
                        <span asp-validation-for="DueDate" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-4">
                        <div class="form-check">
                            <input asp-for="IsCompleted" class="form-check-input" type="checkbox" />
                            <label asp-for="IsCompleted" class="form-check-label">
                                Mark as completed
                            </label>
                        </div>
                        <span asp-validation-for="IsCompleted" class="text-danger"></span>
                    </div>
                    
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-warning">
                            <i class="fas fa-save me-2"></i>Update Todo
                        </button>
                        <a asp-action="Details" asp-route-id="@todoId" class="btn btn-outline-info">
                            <i class="fas fa-eye me-2"></i>View Details
                        </a>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Set minimum date to today for new due dates
        document.addEventListener('DOMContentLoaded', function() {
            const dueDateInput = document.querySelector('input[name="DueDate"]');
            if (dueDateInput && !dueDateInput.value) {
                const now = new Date();
                const year = now.getFullYear();
                const month = String(now.getMonth() + 1).padStart(2, '0');
                const day = String(now.getDate()).padStart(2, '0');
                const hours = String(now.getHours()).padStart(2, '0');
                const minutes = String(now.getMinutes()).padStart(2, '0');
                
                dueDateInput.min = `${year}-${month}-${day}T${hours}:${minutes}`;
            }
        });
    </script>
}
