@model Implemented_MVC.DTOs.TodoItemDto
@{
    ViewData["Title"] = "Delete Todo";
    string statusClass = Model.IsCompleted ? "bg-success" : (Model.IsOverdue ? "bg-danger" : "bg-primary");
    string badgeClass = "bg-light text-dark";
    string statusText = Model.IsCompleted ? "Completed" : (Model.IsOverdue ? "Overdue" : "Pending");
    string statusIcon = Model.IsCompleted ? "fas fa-check-circle" : (Model.IsOverdue ? "fas fa-exclamation-triangle" : "fas fa-clock");
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow border-danger">
            <div class="card-header bg-danger text-white">
                <h3 class="card-title mb-0">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h3>
            </div>
            <div class="card-body p-4">
                <div class="alert alert-warning" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning!</strong> This action cannot be undone. Are you sure you want to delete this todo?
                </div>
                
                <div class="card mb-4">
                    <div class="card-header @statusClass text-white">
                        <h5 class="card-title mb-0">@Model.Title</h5>
                        <span class="badge @badgeClass">
                            <i class="@statusIcon me-1"></i>@statusText
                        </span>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <p class="card-text @(Model.IsCompleted ? "text-muted" : "")">@Model.Description</p>
                        }
                        
                        <div class="small text-muted">
                            <div><i class="fas fa-calendar-plus me-1"></i>Created: @Model.CreatedAt.ToString("MMMM dd, yyyy h:mm tt")</div>
                            @if (Model.DueDate.HasValue)
                            {
                                <div class="@(Model.DueDate.Value < DateTime.Now && !Model.IsCompleted ? "text-danger" : "")">
                                    <i class="fas fa-calendar-times me-1"></i>Due: @Model.DueDate.Value.ToString("MMMM dd, yyyy h:mm tt")
                                </div>
                            }
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <div><i class="fas fa-edit me-1"></i>Updated: @Model.UpdatedAt.Value.ToString("MMMM dd, yyyy h:mm tt")</div>
                            }
                            @if (User.IsInRole("Admin") && !string.IsNullOrEmpty(Model.UserEmail))
                            {
                                <div><i class="fas fa-user me-1"></i>Owner: @Model.UserEmail</div>
                            }
                        </div>
                    </div>
                </div>
                
                <div class="d-flex gap-2">
                    <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you absolutely sure you want to delete this todo? This action cannot be undone.')">
                            <i class="fas fa-trash me-2"></i>Yes, Delete Todo
                        </button>
                    </form>
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">
                        <i class="fas fa-eye me-2"></i>View Details
                    </a>
                    <div class="ms-auto">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
